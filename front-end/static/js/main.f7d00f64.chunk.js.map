{"version":3,"sources":["components/todolist/Header.tsx","components/todolist/TodoItem.js","components/todolist/AddTodo.js","components/todolist/TodoList.js","components/tree_menu/TreeMenuApi.tsx","components/tree_menu/TreeMenu.tsx","components/cover/TreeMenuCover.tsx","App.tsx","index.tsx"],"names":["headerStyle","background","color","textAlight","padding","Header","style","TodoItem","getStyle","textAlign","border","textDecoration","props","todo","completed","this","id","title","type","onChange","markComplete","bind","btnStyle","onClick","deleteTodo","Component","borderRadius","float","cursor","AddTodo","state","onType","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","flex","placeholder","className","TodoList","getAllTodos","axios","get","apiUrl","then","res","todos","data","put","console","log","map","delete","filter","newTodo","post","complete","key","React","TreeMenuApi","scale","units","menu","handleSpawn","currElem","depth","node","from","spawnRange","to","children","length","theta","splice","forEach","child","i","hiding","dir","diff","dirToDist","menuInfo","baseInfo","parent","willSpawn","pos","x","y","animation","keyframes","getKeyframes","startPos","getSpawnRange","route","link","killKids","except","Object","entries","getHiddenKeyframes","getHidingKeyframes","Math","PI","trunc","cos","sin","a","TreeMenu","menuApi","animatedLayer","timeouts","nodeToJSX","MenuButton","getDynamicStyle","uuid","v4","nodeClicked","window","location","href","prevState","elements","setTimeout","baseStyle","styled","button","posx","posy","extra","css","rootPos","root","jsxArr","push","openPath","path","timeoutId","clearTimeout","withRouter","TreeMenuCover","renderable","getAnimation","frames","fading","Boat","div","ImgBlock","img","ImgButton","BigButton","Container","Row","pathname","Col","src","position","lineHeight","height","width","bottom","left","backgroundColor","App","randoo","rando","fontSize","windowSize","updateWindowDimensions","LaunchMenu","exact","addEventListener","removeEventListener","innerWidth","innerHeight","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7d00f64.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header () {\n  return (\n    <header style={headerStyle}>\n      <h1>Notes</h1>\n    </header>\n  );\n}\n\nconst headerStyle = {\n  background: '#333',\n  color: 'white',\n  textAlight: 'center',\n  padding: '10px',\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background     : '#ccc',\n      textAlign      : 'left',\n      padding        : '10px',\n      border         : '1px #c2c2c2 dotted',\n      color          : 'rgb(125,102,142)',\n      textDecoration : this.props.todo.completed ? 'line-through' : 'none'\n    };\n  };\n\n  render () {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input\n            type=\"checkbox\"\n            onChange={this.props.markComplete.bind(this, id)}\n          />{' '}\n          {title}\n          <button\n            style={btnStyle}\n            onClick={this.props.deleteTodo.bind(this, id)}\n          >\n            x\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo : PropTypes.object.isRequired\n};\n\nconst btnStyle = {\n  background   : '#ff0000',\n  borderRadius : '50%',\n  padding      : '5px 10px',\n  color        : '#fff',\n  float        : 'right',\n  cursor       : 'pointer'\n};\n\nexport default TodoItem;\n","import React, { Component } from 'react';\n\nexport default class AddTodo extends Component {\n  state = {\n    title : '',\n  };\n\n  onType = (e) => this.setState({ [e.target.name]: e.target.value });\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: '' });\n  };\n  render () {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\n        <input\n          type='text'\n          name='title'\n          style={{ flex: '10' }}\n          placeholder='Add Todo...'\n          value={this.state.title}\n          onChange={this.onType}\n        />\n        <input\n          type='submit'\n          value='Submit'\n          className='btn'\n          style={{ flex: '1', padding: '5px' }}\n        />\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { TodoItem } from './TodoItem';\nimport AddTodo from './AddTodo';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nclass TodoList extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      todos : [],\n    };\n    this.apiUrl = props.apiUrl;\n  }\n\n  componentDidMount () {\n    axios.get(this.apiUrl).then((res) => {\n      console.log(res.data);\n    });\n    this.getAllTodos();\n  }\n\n  render () {\n    return (\n      <div>\n        <AddTodo addTodo={this.addTodo} />\n        {this.state.todos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            markComplete={this.markComplete}\n            deleteTodo={this.deleteTodo}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  //* Gets all todos in db\n  getAllTodos = () => {\n    axios.get(this.apiUrl + 'todos').then((res) => {\n      this.setState({\n        todos : res.data,\n      });\n    });\n  };\n\n  //* Called when Todo Checkbox clicked\n  markComplete = (id) => {\n    axios.put(this.apiUrl + `todos/${id}`).then((res) => {\n      console.log('toggled data: ' + res.data);\n    });\n    this.setState({\n      todos : this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  //* Delete todo item\n  deleteTodo = (id) => {\n    axios.delete(this.apiUrl + `todos/${id}`).then((res) => {\n      console.log('deleted data: ' + res.data);\n    });\n    this.setState({\n      todos : [ ...this.state.todos.filter((todo) => todo.id !== id) ],\n    });\n  };\n\n  //* Add todo item\n  addTodo = (title) => {\n    let newTodo = {};\n    axios\n      .post(this.apiUrl + 'todos/', {\n        title    : title,\n        complete : false,\n      })\n      .then((res) => {\n        newTodo = res.data;\n        console.log(newTodo);\n\n        this.setState({ todos: [ ...this.state.todos, newTodo ] });\n      });\n  };\n}\n\nTodoList.propTypes = {\n  apiUrl : PropTypes.string.isRequired,\n};\n\nexport default TodoList;\n","// import * as uuid from 'uuid';\nimport { keyframes, Keyframes } from 'styled-components';\n\nclass TreeMenuApi {\n  scale: number;\n  units: string;\n  menu: Array<{ [key: string]: MenuNode }>;\n  constructor (props: MyProps) {\n    this.scale = props.scale;\n    this.units = props.units;\n    this.menu = props.menu;\n  }\n\n  //! --------------------------------------------------------------------------\n\n  handleSpawn = (currElem: Array<Layer>, depth: number, id: string): number => {\n    let node: InfoNodeChildren = currElem[depth][id] as InfoNodeChildren;\n    const from: number = node.spawnRange.from;\n    let to: number = node.spawnRange.to;\n    const children: Array<string> = (this.menu[depth][id] as MenuNodeChildren)\n      .children;\n    //* Handles root, or 360 spawn, prevents overlap\n    if (from + 2 === to) {\n      to = to - 2 / children.length;\n    }\n    const theta = (to - from) / (children.length - 1);\n    // if (node.parent) {\n    //   this.killKids(currElem, depth - 1, node.parent, id);\n    // }\n    //* Deactivates everything else\n    currElem.splice(depth + 2);\n\n    //* Deactivates Siblings\n    currElem[depth] = { [id]: node };\n\n    //* Resets next layer\n    currElem[depth + 1] = currElem[depth + 1] ? currElem[depth + 1] : {};\n\n    //* Adds node's children to currElem, returns currElem\n    children.forEach((child: string, i: number) => {\n      if (!currElem[depth + 1][child] || currElem[depth + 1][child].hiding) {\n        //* Generates evenly distributed dirs for kids\n        const dir = from + i * theta;\n\n        //* Diff is distance moved\n        const diff = this.dirToDist(dir);\n        const menuInfo: MenuNode = this.menu[depth + 1][child];\n        const baseInfo = {\n          title: menuInfo.title,\n          background: menuInfo.background,\n          parent: id,\n          hiding: false,\n          willSpawn: true,\n          pos: { x: diff.x + node.pos.x, y: diff.y + node.pos.y },\n          animation: { keyframes: this.getKeyframes(dir), startPos: node.pos },\n        };\n\n        //* Populates new children based on type, inline typeguards\n        if ((menuInfo as MenuNodeChildren).children) {\n          currElem[depth + 1][child] = {\n            ...baseInfo,\n            spawnRange: this.getSpawnRange(dir),\n          };\n        } else if ((menuInfo as MenuNodeRoute).route) {\n          currElem[depth + 1][child] = {\n            ...baseInfo,\n            route: (menuInfo as MenuNodeRoute).route,\n          };\n        } else if ((menuInfo as MenuNodeLink).link) {\n          currElem[depth + 1][child] = {\n            ...baseInfo,\n            link: (menuInfo as MenuNodeLink).link,\n          };\n        }\n      }\n    });\n    return depth + 1;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  killKids = (\n    currElem: Array<Layer>,\n    depth: number,\n    id: string,\n    except?: string\n  ): number => {\n    let node: InfoNodeChildren = currElem[depth][id] as InfoNodeChildren;\n\n    for (let i = depth + 1; i < currElem.length; i++) {\n      Object.entries(currElem[i]).forEach(([ id, child ]) => {\n        if (id !== except) {\n          if (!child.hiding) {\n            child.hiding = true;\n            if (child.animation) {\n              child.animation.keyframes = this.getHidingKeyframes(\n                node.pos,\n                child.pos\n              );\n            }\n          } else if (child.animation) {\n            child.animation.keyframes = this.getHiddenKeyframes();\n          }\n        }\n      });\n    }\n    return depth + 1;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  getKeyframes = (dir: number): Keyframes => {\n    const { x, y } = this.dirToDist(dir);\n    return keyframes`\n    0% {\n      transform: rotate(0deg) translate(0px, 0px);\n      visibility: hidden;\n      opacity: 0;\n    }\n    70% {\n      transform: translate(\n        ${x * -3}${this.units},\n        ${y * -3}${this.units}\n      );\n    }\n    80% {\n      transform: translate(\n        ${x * -2.5}${this.units},\n        ${y * -2.5}${this.units}\n      );\n    }\n    100% {\n      transform: translate(\n        ${x * -3}${this.units},\n        ${y * -3}${this.units}\n      );\n      visibility: visible;\n      opacity: 1;\n    }`;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  getHidingKeyframes = (from: Point, to: Point): Keyframes => {\n    return keyframes`\n    0% {\n      transform: translate(0px, 0px);\n      visibility: visible;\n      opacity: 1;\n      z-index: 0;\n    }\n    \n    100% {\n      z-index: 0;\n      transform: translate(\n        ${from.x - to.x}${this.units},\n        ${from.y - to.y}${this.units});\n        visibility: hidden;\n        opacity: 0;\n      }\n    }`;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  getHiddenKeyframes = (): Keyframes => {\n    return keyframes`\n    0% {\n      visibility: hidden;\n    }\n    100% {\n      visibility: hidden;\n      }\n    }`;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  //* Returns dist translated\n  dirToDist = (dir: number): { x: number; y: number } => {\n    dir = Math.PI * dir;\n    return {\n      x: Math.trunc(Math.cos(dir) * this.scale),\n      y: Math.trunc(Math.sin(dir) * -this.scale),\n    };\n  };\n\n  //! --------------------------------------------------------------------------\n\n  getSpawnRange = (a: number) => {\n    // a *= 8;\n    // let i: number = Math.floor(((a < 1 ? a + 15 : a) - 1) / 2);\n    return {\n      from: 1.5 + a,\n      to: 2.5 + a,\n      // from: Math.floor(i / 2) * 0.5,\n      // to: Math.floor((i + 3) / 2) * 0.5,\n    };\n  };\n}\n\n//! ----------------------------------------------------------------------------------------------------------------------------------------------------\n//? ----------------------------------------------------------------------------------------------------------------------------------------------------\n//! ----------------------------------------------------------------------------------------------------------------------------------------------------\n//? ----------------------------------------------------------------------------------------------------------------------------------------------------\n\n//* Types and stuff\n\ninterface MyProps {\n  menu: Array<{ [key: string]: MenuNode }>;\n  scale: number;\n  units: string;\n}\nexport interface Point {\n  x: number;\n  y: number;\n}\nexport interface SpawnRange {\n  from: number;\n  to: number;\n}\nexport interface Layer {\n  [key: string]: InfoNode;\n}\n//? --------------------------------------------------------------------------\n\ninterface MenuNodeBasics {\n  title: string;\n  background?: string;\n}\ninterface MenuNodeChildren extends MenuNodeBasics {\n  children: Array<string>;\n  link?: never;\n  route?: never;\n}\ninterface MenuNodeLink extends MenuNodeBasics {\n  link: string;\n  spawnRange?: never;\n  route?: never;\n}\ninterface MenuNodeRoute extends MenuNodeBasics {\n  route: string;\n  spawnRange?: never;\n  link?: never;\n}\nexport type MenuNode = MenuNodeChildren | MenuNodeLink | MenuNodeRoute;\n\n//? --------------------------------------------------------------------------\n\ninterface InfoNodeBasics {\n  pos: Point;\n  title: string;\n  parent?: string;\n  background?: string;\n  willSpawn?: boolean;\n  hiding?: boolean;\n  animation?: {\n    startPos: Point;\n    keyframes: Keyframes;\n  };\n}\ninterface InfoNodeChildren extends InfoNodeBasics {\n  spawnRange: SpawnRange;\n  link?: never;\n  route?: never;\n}\ninterface InfoNodeLink extends InfoNodeBasics {\n  link: string;\n  spawnRange?: never;\n  route?: never;\n}\ninterface InfoNodeRoute extends InfoNodeBasics {\n  route: string;\n  spawnRange?: never;\n  link?: never;\n}\nexport type InfoNode = InfoNodeChildren | InfoNodeLink | InfoNodeRoute;\n\n//? --------------------------------------------------------------------------\n\n//! --------------------------------------------------------------------------\n\nexport default TreeMenuApi;\n","import * as React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { RouteComponentProps } from 'react-router';\nimport styled, { css, FlattenSimpleInterpolation } from 'styled-components';\n// keyframes,\n// Keyframes,\nimport TreeMenuApi, {\n  InfoNode,\n  Point,\n  SpawnRange,\n  MenuNode,\n  Layer,\n} from './TreeMenuApi';\nimport uuid from 'uuid';\n\n//* Types and stuff\n\n//* Each index in active array denotes a layer of the tree,\n\n//* Each layer (at depth i) is an object mapping ids to positions\ntype MyState = {\n  elements: Array<Layer>;\n};\ntype LocationState = {\n  openPath?: Array<string>;\n  highlighted?: string;\n};\ntype MyProps = RouteComponentProps<{}, {}, LocationState> & {\n  rootPos: Point;\n  spawnRange: SpawnRange;\n  menu: Array<{ [key: string]: MenuNode }>;\n};\n\nclass TreeMenu extends React.Component<MyProps, MyState> {\n  scale: number = 75;\n  units: string = 'px';\n  menuApi: TreeMenuApi;\n  animatedLayer = 1;\n  timeouts: Array<number> = [];\n  constructor (props: MyProps) {\n    super(props);\n\n    this.state = {\n      elements:\n        [\n          {\n            root:\n              {\n                pos: { x: 0, y: 0 },\n                title: props.menu[0].root.title,\n                willSpawn: true,\n                spawnRange: props.spawnRange,\n              },\n          },\n        ],\n    };\n    this.menuApi = new TreeMenuApi({\n      menu: props.menu,\n      scale: 75,\n      units: 'px',\n    });\n  }\n\n  //! --------------------------------------------------------------------------\n\n  render (): Array<JSX.Element> {\n    let jsxArr: Array<JSX.Element> = [];\n    for (let i = 0; i < this.state.elements.length; i++) {\n      Object.entries(this.state.elements[i]).forEach(([ id, node ]) => {\n        jsxArr.push(this.nodeToJSX(node, i, id));\n      });\n    }\n    this.animatedLayer++;\n    return jsxArr;\n  }\n\n  //! --------------------------------------------------------------------------\n\n  componentDidMount () {\n    this.timeouts.push(\n      setTimeout(() => {\n        if (this.props.location.state && this.props.location.state.openPath) {\n          for (let i = 0; i < this.props.location.state.openPath.length; i++) {\n            let path = this.props.location.state.openPath[i];\n            this.timeouts.push(\n              setTimeout(() => {\n                if (\n                  this.state.elements.length > i &&\n                  this.state.elements[i][path]\n                ) {\n                  this.nodeClicked(i, path);\n                }\n              }, i * 700)\n            );\n          }\n        }\n      }, 500)\n    );\n  }\n\n  //! --------------------------------------------------------------------------\n\n  componentWillUnmount () {\n    this.timeouts.forEach((timeoutId) => clearTimeout(timeoutId));\n  }\n\n  //! --------------------------------------------------------------------------\n\n  nodeToJSX = (node: InfoNode, depth: number, id: string): JSX.Element => {\n    let MenuButton = this.getDynamicStyle(node, depth);\n    // if (node.animation) {\n    //   this.state.elements[depth][id].animation = undefined;\n    // }\n    if (node.route) {\n      return (\n        <Link to={node.route} key={uuid.v4()}>\n          <MenuButton>{node.title}</MenuButton>\n        </Link>\n      );\n    } else if (node.spawnRange) {\n      return (\n        <MenuButton\n          key={uuid.v4()}\n          onClick={this.nodeClicked.bind(this, depth, id)}\n        >\n          {node.title}\n        </MenuButton>\n      );\n    } else if (node.link) {\n      return (\n        <MenuButton\n          key={uuid.v4()}\n          onClick={() => (window.location.href = node.link)}\n        >\n          {node.title}\n        </MenuButton>\n      );\n    }\n    return <MenuButton key={uuid.v4()}>{node.title}</MenuButton>;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  nodeClicked = (depth: number, id: string): void => {\n    this.setState((prevState: MyState) => {\n      if (prevState.elements[depth][id].willSpawn) {\n        prevState.elements[depth][id].willSpawn = false;\n        this.animatedLayer = this.menuApi.handleSpawn(\n          prevState.elements,\n          depth,\n          id\n        );\n      } else {\n        prevState.elements[depth][id].willSpawn = true;\n        this.animatedLayer = this.menuApi.killKids(\n          prevState.elements,\n          depth,\n          id\n        );\n        setTimeout(() => {\n          this.nodeClicked(depth, id);\n        }, 350);\n      }\n      return prevState;\n    });\n  };\n\n  //! -------------------------------------------------------------------------\n\n  baseStyle = () => {\n    return styled.button`\n      font-size: 9pt;\n      font-weight: 600;\n      color: #ffffff;\n      text-shadow: 2px 2px #000000;\n\n      outline: none;\n      position: fixed;\n\n      width: ${this.scale}${this.units};\n      height: ${this.scale}${this.units};\n      margin-top: -${this.scale / 2}${this.units};\n      margin-left: -${this.scale / 2}${this.units};\n\n      background-size: contain;\n      transition: all ease-out 500ms;\n\n      border-radius: 50%;\n\n      &:active {\n        transition-delay: 200ms;\n        border-color: #fdb241;\n        border-width: 2px;\n        z-index: 20;\n        font-size: 0pt;\n        margin-top: -${this.scale * 2}${this.units};\n        margin-left: -${this.scale * 2}${this.units};\n        width: ${this.scale * 4}${this.units};\n        height: ${this.scale * 4}${this.units};\n      }\n    `;\n  };\n\n  getDynamicStyle = (node: InfoNode, depth: number) => {\n    let posx = node.pos.x;\n    let posy = node.pos.y;\n    let extra: FlattenSimpleInterpolation = css``;\n    if (node.hiding && node.animation) {\n      extra = css`\n        animation: ${node.animation.keyframes} 350ms ease-in forwards;\n      `;\n    } else if (node.animation && this.animatedLayer === depth) {\n      posx = -3 * node.animation.startPos.x + 4 * posx;\n      posy = -3 * node.animation.startPos.y + 4 * posy;\n      extra = css`\n        animation: ${node.animation.keyframes} 500ms ease-in forwards;\n      `;\n    }\n    // background: ${node.background || '#404040'};\n    return styled(this.baseStyle())`\n    left: ${this.props.rootPos.x + posx}px;\n    top: ${this.props.rootPos.y + posy}px;\n    \n    background-image: linear-gradient(\n      rgba(0, 0, 0, 0.25),\n      rgba(0, 0, 0, 0.25)\n    ), url(/${node.background || 'icons/default.png'});\n    ${extra}\n    `;\n  };\n}\n\n//! --------------------------------------------------------------------------\n\nexport default withRouter(TreeMenu);\n","import React, { Component } from 'react';\nimport { Point } from '../tree_menu/TreeMenuApi';\nimport { Link, withRouter } from 'react-router-dom';\nimport { RouteComponentProps } from 'react-router';\nimport styled, { css, keyframes } from 'styled-components';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\ntype LocationState = {\n  openPath?: Array<string>;\n  highlighted?: string;\n};\ntype MyState = {\n  // clicked: boolean;\n};\ntype MyProps = RouteComponentProps<{}, {}, LocationState> & {\n  pos: Point;\n  fading: boolean;\n};\n\nclass TreeMenuCover extends Component<MyProps, MyState> {\n  renderable = true;\n  timeouts: Array<number> = [];\n\n  getAnimation = () => {\n    const frames = keyframes`\n    0% {\n      visibility: visible;\n      transform: scale(1);\n      opacity: 1;\n    }\n    \n    100% {\n      transform: scale(0);\n      visibility: hidden;\n      opacity: 0;\n    }\n    `;\n    return css`\n      animation: ${frames} 1000ms ease-in forwards;\n    `;\n  };\n\n  render () {\n    if (!this.props.fading || (this.props.location.state && this.renderable)) {\n      if (this.props.fading) {\n        this.timeouts.push(\n          setTimeout(() => {\n            console.log('unrenderable');\n            this.renderable = false;\n            this.timeouts.push(\n              setTimeout(() => {\n                this.renderable = true;\n              }, 800)\n            );\n          }, 400)\n        );\n      }\n      const Boat = styled.div`\n        border-radius: 20px;\n        border-width: 100px;\n        border-color: #227b99;\n\n        z-index: 100;\n        position: absolute;\n        width: 300px;\n        height: 300px;\n        left: ${this.props.pos.x - 150}px;\n        top: ${this.props.pos.y - 150}px;\n        background-color: #227b99;\n        ${this.props.fading ? this.getAnimation() : ''};\n      `;\n      const ImgBlock = styled.img`\n        border-radius: 20px;\n        width: 98px;\n        height: 98px;\n      `;\n      const ImgButton = styled.button`\n        border-width: 1px;\n        border-radius: 20px;\n        background-color: #227b99;\n        &:hover {\n          border-color: #fdb241;\n        }\n      `;\n      const BigButton = styled.button`\n        border-width: 1px;\n        border-radius: 20px;\n        background-color: #227b99;\n        &:hover {\n          border-color: #fdb241;\n        }\n      `;\n      return (\n        <Boat>\n          <Container className='justify-content-center m-0 p-0'>\n            <Row className='m-0 p-0'>\n              <Link\n                to={{\n                  pathname: '/explore',\n                  state: { openPath: [ 'root', 'projects' ] },\n                }}\n              >\n                <ImgButton>\n                  <Col className='m-0 p-0'>\n                    <ImgBlock src='/icons/gpxdemo-o.gif' />\n                  </Col>\n                </ImgButton>\n              </Link>\n              <Link\n                to={{\n                  pathname: '/explore',\n                  state: { openPath: [ 'root', 'art' ] },\n                }}\n              >\n                <ImgButton>\n                  <Col className='m-0 p-0'>\n                    <ImgBlock src='/icons/sherbert.svg' />\n                  </Col>\n                </ImgButton>\n              </Link>\n              <Link\n                to={{\n                  pathname: '/explore',\n                  state: { openPath: [ 'root', 'projects', 'fun' ] },\n                }}\n              >\n                <ImgButton>\n                  <Col className='m-0 p-0'>\n                    <ImgBlock src='/icons/mzoom.gif' />\n                  </Col>\n                </ImgButton>\n              </Link>\n            </Row>\n            <Link\n              to={{\n                pathname: '/explore',\n                state: { openPath: [ 'root' ] },\n              }}\n            >\n              <BigButton\n                style={{\n                  position: 'absolute',\n                  textAlign: 'center',\n                  // padding: '20px 0',\n                  lineHeight: 100,\n                  height: 100,\n                  width: 300,\n                  bottom: 100,\n                  left: 0,\n                  backgroundColor: '#116a88',\n                }}\n              >\n                <h1\n                  style={{\n                    lineHeight: 2.5,\n                  }}\n                >\n                  Explore\n                </h1>\n              </BigButton>\n            </Link>\n            <div\n              style={{\n                position: 'absolute',\n                height: 100,\n                bottom: 0,\n              }}\n            >\n              <Row className='m-0 p-0'>\n                <Link\n                  to={{\n                    pathname: '/explore',\n                    state: { openPath: [ 'root', 'art' ] },\n                  }}\n                >\n                  <ImgButton>\n                    <Col className='m-0 p-0'>\n                      <ImgBlock src='/icons/raw-bowl.JPG' />\n                    </Col>\n                  </ImgButton>\n                </Link>\n                <Link\n                  to={{\n                    pathname: '/explore',\n                    state: { openPath: [ 'root', 'projects' ] },\n                  }}\n                >\n                  <ImgButton>\n                    <Col className='m-0 p-0'>\n                      <ImgBlock src='/icons/jzoom.gif' />\n                    </Col>\n                  </ImgButton>\n                </Link>\n                <Link\n                  to={{\n                    pathname: '/explore',\n                    state: { openPath: [ 'root', 'art' ] },\n                  }}\n                >\n                  <ImgButton>\n                    <Col className='m-0 p-0'>\n                      <ImgBlock src='/icons/macro-drops.jpg' />\n                    </Col>\n                  </ImgButton>\n                </Link>\n              </Row>\n            </div>\n          </Container>\n        </Boat>\n      );\n    }\n\n    return <div style={{ display: 'none' }} />;\n  }\n\n  //! --------------------------------------------------------------------------\n\n  componentWillUnmount () {\n    this.timeouts.forEach((timeoutId) => clearTimeout(timeoutId));\n  }\n}\n\nexport default withRouter(TreeMenuCover);\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n// import { elastic as Sidebar } from 'react-burger-menu';\nimport Header from './components/todolist/Header';\nimport TodoList from './components/todolist/TodoList';\nimport LaunchMenu from './resources/launch-menu.json';\nimport TreeMenu from './components/tree_menu/TreeMenu';\nimport Cover from './components/cover/TreeMenuCover';\n// import Panels from './components/panels/Panels';\n// import MyAlert from './components/test/MyAlert';\nimport './App.css';\n\ntype MyState = {\n  windowSize: { x: number; y: number };\n  rando?: JSX.Element;\n};\ntype MyProps = {};\n\nclass App extends React.Component<MyProps, MyState> {\n  apiUrl: String;\n\n  constructor (props: MyProps) {\n    super(props);\n    if (process.env.NODE_ENV === 'development') {\n      this.apiUrl = 'http://127.0.0.1:54321/api/';\n    } else {\n      this.apiUrl = 'https://abarbieux.com/api/';\n    }\n    this.state = {\n      windowSize: { x: 0, y: 0 },\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n  render () {\n    return (\n      <div className='Tiled-back'>\n        <div>\n          <main>\n            <Router>\n              <Switch>\n                <Route path='/explore'>\n                  <Cover\n                    pos={{\n                      x: this.state.windowSize.x / 2,\n                      y: this.state.windowSize.y / 2,\n                    }}\n                    fading={true}\n                  />\n                  <TreeMenu\n                    rootPos={{\n                      x: this.state.windowSize.x / 2,\n                      y: this.state.windowSize.y / 2,\n                    }}\n                    spawnRange={{ from: 0.5, to: 2.5 }}\n                    menu={LaunchMenu}\n                  />\n                </Route>\n                <Route path='/notes/'>\n                  <Header />\n                  <TodoList apiUrl={this.apiUrl} />\n                  {/* <div>Note Page</div> */}\n                </Route>\n                <Route exact path='/'>\n                  <Cover\n                    pos={{\n                      x: this.state.windowSize.x / 2,\n                      y: this.state.windowSize.y / 2,\n                    }}\n                    fading={false}\n                  />\n                </Route>\n              </Switch>\n            </Router>\n          </main>\n        </div>\n      </div>\n    );\n  }\n\n  randoo = () => {\n    setTimeout(() => {\n      this.setState({ rando: <p style={{ fontSize: 20 }}>hello!</p> });\n    }, 3000);\n  };\n  componentDidMount () {\n    this.randoo();\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions () {\n    this.setState({\n      windowSize: { x: window.innerWidth, y: window.innerHeight },\n    });\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}