{"version":3,"sources":["components/todolist/Header.tsx","components/todolist/TodoItem.js","components/todolist/AddTodo.js","components/todolist/TodoList.js","components/tree_menu/TreeMenuApi.tsx","components/tree_menu/TreeMenu.tsx","App.tsx","index.tsx"],"names":["headerStyle","background","color","textAlight","padding","Header","style","TodoItem","getStyle","textAlign","border","textDecoration","props","todo","completed","this","id","title","type","onChange","markComplete","bind","btnStyle","onClick","deleteTodo","Component","borderRadius","float","cursor","AddTodo","state","onType","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","flex","placeholder","className","TodoList","getAllTodos","axios","get","apiUrl","then","res","todos","data","put","console","log","map","delete","filter","newTodo","post","complete","key","React","TreeMenuApi","scale","units","menu","handleSpawn","currElem","depth","node","from","spawnRange","to","children","length","theta","splice","parent","forEach","child","i","hiding","dir","diff","dirToDist","menuInfo","baseInfo","willSpawn","pos","x","y","animation","keyframes","getKeyframes","startPos","getSpawnRange","route","link","killKids","Object","entries","getHiddenKeyframes","getHidingKeyframes","Math","PI","trunc","cos","sin","a","TreeMenu","menuApi","animatedLayer","nodeToJSX","MenuButton","getDynamicStyle","uuid","v4","nodeClicked","window","location","href","prevState","elements","baseStyle","styled","button","posx","posy","extra","css","rootPos","root","jsxArr","push","App","windowSize","innerWidth","innerHeight","updateWindowDimensions","path","LaunchMenu","addEventListener","removeEventListener","ReactDOM","render","document","getElementById"],"mappings":"6iFAUA,IAAMA,EAAc,CAClBC,WAAY,OACZC,MAAO,QACPC,WAAY,SACZC,QAAS,QAGIC,EAff,WACE,OACE,4BAAQC,MAAON,GACb,uC,QCFOO,EAAb,4MACEC,SAAW,WACT,MAAO,CACLP,WAAiB,OACjBQ,UAAiB,OACjBL,QAAiB,OACjBM,OAAiB,qBACjBR,MAAiB,mBACjBS,eAAiB,EAAKC,MAAMC,KAAKC,UAAY,eAAiB,SARpE,uDAYa,IAAD,EACcC,KAAKH,MAAMC,KAAzBG,EADA,EACAA,GAAIC,EADJ,EACIA,MACZ,OACE,yBAAKX,MAAOS,KAAKP,YACf,2BACE,2BACEU,KAAK,WACLC,SAAUJ,KAAKH,MAAMQ,aAAaC,KAAKN,KAAMC,KAC5C,IACFC,EACD,4BACEX,MAAOgB,EACPC,QAASR,KAAKH,MAAMY,WAAWH,KAAKN,KAAMC,IAF5C,WAtBV,GAA8BS,aAsCxBH,EAAW,CACfrB,WAAe,UACfyB,aAAe,MACftB,QAAe,WACfF,MAAe,OACfyB,MAAe,QACfC,OAAe,W,QC7CIC,E,4MACnBC,MAAQ,CACNb,MAAQ,I,EAGVc,OAAS,SAACC,GAAD,OAAO,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAC1DC,SAAW,SAACL,GACVA,EAAEM,iBACF,EAAK1B,MAAM2B,QAAQ,EAAKT,MAAMb,OAC9B,EAAKgB,SAAS,CAAEhB,MAAO,M,uDAGvB,OACE,0BAAMoB,SAAUtB,KAAKsB,SAAU/B,MAAO,CAAEkC,QAAS,SAC/C,2BACEtB,KAAK,OACLiB,KAAK,QACL7B,MAAO,CAAEmC,KAAM,MACfC,YAAY,cACZN,MAAOrB,KAAKe,MAAMb,MAClBE,SAAUJ,KAAKgB,SAEjB,2BACEb,KAAK,SACLkB,MAAM,SACNO,UAAU,MACVrC,MAAO,CAAEmC,KAAM,IAAKrC,QAAS,c,GA1BFqB,a,iBC4FtBmB,E,kDAvFb,WAAahC,GAAQ,IAAD,8BAClB,cAAMA,IAgCRiC,YAAc,WACZC,IAAMC,IAAI,EAAKC,OAAS,SAASC,MAAK,SAACC,GACrC,EAAKjB,SAAS,CACZkB,MAAQD,EAAIE,WApCE,EA0CpBhC,aAAe,SAACJ,GACd8B,IAAMO,IAAI,EAAKL,OAAL,gBAAuBhC,IAAMiC,MAAK,SAACC,GAC3CI,QAAQC,IAAI,iBAAmBL,EAAIE,SAErC,EAAKnB,SAAS,CACZkB,MAAQ,EAAKrB,MAAMqB,MAAMK,KAAI,SAAC3C,GAI5B,OAHIA,EAAKG,KAAOA,IACdH,EAAKC,WAAaD,EAAKC,WAElBD,QAnDO,EAyDpBW,WAAa,SAACR,GACZ8B,IAAMW,OAAO,EAAKT,OAAL,gBAAuBhC,IAAMiC,MAAK,SAACC,GAC9CI,QAAQC,IAAI,iBAAmBL,EAAIE,SAErC,EAAKnB,SAAS,CACZkB,MAAK,YAAQ,EAAKrB,MAAMqB,MAAMO,QAAO,SAAC7C,GAAD,OAAUA,EAAKG,KAAOA,SA9D3C,EAmEpBuB,QAAU,SAACtB,GACT,IAAI0C,EAAU,GACdb,IACGc,KAAK,EAAKZ,OAAS,SAAU,CAC5B/B,MAAWA,EACX4C,UAAW,IAEZZ,MAAK,SAACC,GACLS,EAAUT,EAAIE,KACdE,QAAQC,IAAII,GAEZ,EAAK1B,SAAS,CAAEkB,MAAM,GAAD,mBAAO,EAAKrB,MAAMqB,OAAlB,CAAyBQ,UA3ElD,EAAK7B,MAAQ,CACXqB,MAAQ,IAEV,EAAKH,OAASpC,EAAMoC,OANF,E,gEAUlBF,IAAMC,IAAIhC,KAAKiC,QAAQC,MAAK,SAACC,GAC3BI,QAAQC,IAAIL,EAAIE,SAElBrC,KAAK8B,gB,+BAGI,IAAD,OACR,OACE,6BACE,kBAAC,EAAD,CAASN,QAASxB,KAAKwB,UACtBxB,KAAKe,MAAMqB,MAAMK,KAAI,SAAC3C,GAAD,OACpB,kBAAC,EAAD,CACEiD,IAAKjD,EAAKG,GACVH,KAAMA,EACNO,aAAc,EAAKA,aACnBI,WAAY,EAAKA,qB,GA1BNuC,IAAMtC,W,s0BC8PduC,EA7Pb,WAAapD,GAAiB,IAAD,gCAH7BqD,WAG6B,OAF7BC,WAE6B,OAD7BC,UAC6B,OAQ7BC,YAAc,SAACC,EAAwBC,EAAetD,GACpD,IAAIuD,EAAyBF,EAASC,GAAOtD,GACvCwD,EAAeD,EAAKE,WAAWD,KACjCE,EAAaH,EAAKE,WAAWC,GAC3BC,EAA2B,EAAKR,KAAKG,GAAOtD,GAC/C2D,SAECH,EAAO,IAAME,IACfA,GAAU,EAAIC,EAASC,QAEzB,IAAMC,GAASH,EAAKF,IAASG,EAASC,OAAS,GAkD/C,OA/CAP,EAASS,OAAOR,EAAQ,GAGxBC,EAAKQ,QAAS,EACdV,EAASC,GAAT,eAAqBtD,EAAKuD,GAG1BF,EAASC,EAAQ,GAAKD,EAASC,EAAQ,GAAKD,EAASC,EAAQ,GAAK,GAGlEK,EAASK,SAAQ,SAACC,EAAeC,GAC/B,IAAKb,EAASC,EAAQ,GAAGW,IAAUZ,EAASC,EAAQ,GAAGW,GAAOE,OAAQ,CAEpE,IAAMC,EAAMZ,EAAOU,EAAIL,EAGjBQ,EAAO,EAAKC,UAAUF,GACtBG,EAAqB,EAAKpB,KAAKG,EAAQ,GAAGW,GAC1CO,EAAW,CACfvE,MAAOsE,EAAStE,MAChBhB,WAAYsF,EAAStF,WACrB8E,QAAQ,EACRI,QAAQ,EACRM,WAAW,EACXC,IAAK,CAAEC,EAAGN,EAAKM,EAAIpB,EAAKmB,IAAIC,EAAGC,EAAGP,EAAKO,EAAIrB,EAAKmB,IAAIE,GACpDC,UAAW,CAAEC,UAAW,EAAKC,aAAaX,GAAMY,SAAUzB,EAAKmB,MAI5DH,EAA8BZ,SACjCN,EAASC,EAAQ,GAAGW,GAApB,2BACKO,GADL,IAEEf,WAAY,EAAKwB,cAAcb,KAEvBG,EAA2BW,MACrC7B,EAASC,EAAQ,GAAGW,GAApB,2BACKO,GADL,IAEEU,MAAQX,EAA2BW,QAE3BX,EAA0BY,OACpC9B,EAASC,EAAQ,GAAGW,GAApB,2BACKO,GADL,IAEEW,KAAOZ,EAA0BY,YAKlC7B,EAAQ,GApEY,KAyE7B8B,SAAW,SAAC/B,EAAwBC,EAAetD,GAGjD,IAFA,IAAIuD,EAAyBF,EAASC,GAAOtD,GAEpCkE,EAAIZ,EAAQ,EAAGY,EAAIb,EAASO,OAAQM,IAC3CmB,OAAOC,QAAQjC,EAASa,IAAIF,SAAQ,YAAoB,IAAD,mBAAZC,GAAY,WAChDA,EAAME,OAQAF,EAAMY,YACfZ,EAAMY,UAAUC,UAAY,EAAKS,uBARjCtB,EAAME,QAAS,EACXF,EAAMY,YACRZ,EAAMY,UAAUC,UAAY,EAAKU,mBAC/BjC,EAAKmB,IACLT,EAAMS,UAShB,OAAOpB,EAAQ,GA5FY,KAiG7ByB,aAAe,SAACX,GAA4B,IAAD,EACxB,EAAKE,UAAUF,GAAxBO,EADiC,EACjCA,EAAGC,EAD8B,EAC9BA,EACX,OAAOE,YAAP,IAUMH,EAAI,EAAKzB,MACT0B,EAAI,EAAK1B,QA9GY,KAqH7BsC,mBAAqB,SAAChC,EAAaE,GACjC,OAAOoB,YAAP,IAQMtB,EAAKmB,EAAIjB,EAAGiB,EAAI,EAAKzB,MACrBM,EAAKoB,EAAIlB,EAAGkB,EAAI,EAAK1B,QA/HA,KAwI7BqC,mBAAqB,WACnB,OAAOT,YAAP,MAzI2B,KAsJ7BR,UAAY,SAACF,GAEX,OADAA,EAAMqB,KAAKC,GAAKtB,EACT,CACLO,EAAGc,KAAKE,MAAMF,KAAKG,IAAIxB,GAAO,EAAKnB,OACnC2B,EAAGa,KAAKE,MAAMF,KAAKI,IAAIzB,IAAQ,EAAKnB,SA1JX,KAgK7BgC,cAAgB,SAACa,GAGf,MAAO,CACLtC,KAAM,IAAMsC,EACZpC,GAAI,IAAMoC,IApKZ/F,KAAKkD,MAAQrD,EAAMqD,MACnBlD,KAAKmD,MAAQtD,EAAMsD,MACnBnD,KAAKoD,KAAOvD,EAAMuD,M,gjCC6KP4C,E,kDArKb,WAAanG,GAAiB,IAAD,8BAC3B,cAAMA,IANRqD,MAAgB,GAKa,EAJ7BC,MAAgB,KAIa,EAH7B8C,aAG6B,IAF7BC,cAAgB,EAEa,EAuC7BC,UAAY,SAAC3C,EAAgBD,EAAetD,GAC1C,IAAImG,EAAa,EAAKC,gBAAgB7C,EAAMD,GAI5C,OAAIC,EAAK2B,MAEL,gBAAC,IAAD,CAAMxB,GAAIH,EAAK2B,MAAOpC,IAAKuD,IAAKC,MAC9B,gBAACH,EAAD,KAAa5C,EAAKtD,QAGbsD,EAAKE,WAEZ,gBAAC0C,EAAD,CACErD,IAAKuD,IAAKC,KACV/F,QAAS,EAAKgG,YAAYlG,KAAjB,eAA4BiD,EAAOtD,IAE3CuD,EAAKtD,OAGDsD,EAAK4B,KAEZ,gBAACgB,EAAD,CACErD,IAAKuD,IAAKC,KACV/F,QAAS,kBAAOiG,OAAOC,SAASC,KAAOnD,EAAK4B,OAE3C5B,EAAKtD,OAIL,gBAACkG,EAAD,CAAYrD,IAAKuD,IAAKC,MAAO/C,EAAKtD,QArEd,EA0E7BsG,YAAc,SAACjD,EAAetD,GAC5B,EAAKiB,UAAS,SAAC0F,GAgBb,OAfIA,EAAUC,SAAStD,GAAOtD,GAAIyE,WAChCkC,EAAUC,SAAStD,GAAOtD,GAAIyE,WAAY,EAC1C,EAAKwB,cAAgB,EAAKD,QAAQ5C,YAChCuD,EAAUC,SACVtD,EACAtD,KAGF2G,EAAUC,SAAStD,GAAOtD,GAAIyE,WAAY,EAC1C,EAAKwB,cAAgB,EAAKD,QAAQZ,SAChCuB,EAAUC,SACVtD,EACAtD,IAGG2G,MA3FkB,EAiG7BE,UAAY,WACV,OAAOC,IAAOC,OAAd,IASW,EAAK9D,MAAQ,EAAKC,MACjB,EAAKD,MAAQ,EAAKC,MACb,EAAKD,MAAQ,EAAI,EAAKC,MACrB,EAAKD,MAAQ,EAAI,EAAKC,QA9Gb,EA0H7BkD,gBAAkB,SAAC7C,EAAgBD,GACjC,IAAI0D,EAAOzD,EAAKmB,IAAIC,EAChBsC,EAAO1D,EAAKmB,IAAIE,EAChBsC,EAAoCC,YAAH,KAarC,OAZI5D,EAAKY,QAAUZ,EAAKsB,UACtBqC,EAAQC,YAAH,IACU5D,EAAKsB,UAAUC,WAErBvB,EAAKsB,WAAa,EAAKoB,gBAAkB3C,IAAUC,EAAKQ,SACjEiD,EAAOzD,EAAKsB,UAAUG,SAASL,EAC/BsC,EAAO1D,EAAKsB,UAAUG,SAASJ,EAC/BsC,EAAQC,YAAH,IACU5D,EAAKsB,UAAUC,YAIzBgC,YAAO,EAAKD,YAAZC,CAAP,IACQ,EAAKlH,MAAMwH,QAAQzC,EAAIqC,EACxB,EAAKpH,MAAMwH,QAAQxC,EAAIqC,EAKpB1D,EAAKtE,YAAc,oBAC3BiI,IA/IF,EAAKpG,MAAQ,CACX8F,SACE,CACE,CACES,KACE,CACE3C,IAAK,CAAEC,EAAG,EAAGC,EAAG,GAChB3E,MAAOL,EAAMuD,KAAK,GAAGkE,KAAKpH,MAC1BwE,WAAW,EACXhB,WAAY7D,EAAM6D,eAK9B,EAAKuC,QAAU,IAAIhD,EAAY,CAC7BG,KAAMvD,EAAMuD,KACZF,MAAO,GACPC,MAAO,OApBkB,E,qDA4B3B,IAF6B,IAAD,OACxBoE,EAA6B,GADL,WAEnBpD,GACPmB,OAAOC,QAAQ,EAAKxE,MAAM8F,SAAS1C,IAAIF,SAAQ,YAAmB,IAAD,mBAAfhE,EAAe,KAAXuD,EAAW,KAC/D+D,EAAOC,KAAK,EAAKrB,UAAU3C,EAAMW,EAAGlE,QAF/BkE,EAAI,EAAGA,EAAInE,KAAKe,MAAM8F,SAAShD,OAAQM,IAAM,EAA7CA,GAMT,OADAnE,KAAKkG,gBACEqB,M,GAxCYvE,aCiERyE,G,wDA1Db,WAAa5H,GAAiB,IAAD,8BAC3B,cAAMA,IAHRoC,YAE6B,EAKzB,EAAKA,OAAS,6BAEhB,EAAKlB,MAAQ,CACX2G,WAAY,CAAE9C,EAAG6B,OAAOkB,WAAa,EAAG9C,EAAG4B,OAAOmB,YAAc,IAElE,EAAKC,uBAAyB,EAAKA,uBAAuBvH,KAA5B,gBAVH,E,qDAa3B,OACE,yBAAKsB,UAAU,cAEb,6BACE,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkG,KAAK,WACV,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAU7F,OAAQjC,KAAKiC,UAGzB,kBAAC,IAAD,CAAO6F,KAAK,KACV,kBAAC,EAAD,CACET,QAAS,CACPzC,EAAG5E,KAAKe,MAAM2G,WAAW9C,EAAI,EAC7BC,EAAG7E,KAAKe,MAAM2G,WAAW7C,EAAI,GAE/BnB,WAAY,CAAED,KAAM,GAAKE,GAAI,KAC7BP,KAAM2E,Y,0CAWtB/H,KAAK6H,yBACLpB,OAAOuB,iBAAiB,SAAUhI,KAAK6H,0B,6CAIvCpB,OAAOwB,oBAAoB,SAAUjI,KAAK6H,0B,+CAI1C7H,KAAKkB,SAAS,CACZwG,WAAY,CAAE9C,EAAG6B,OAAOkB,WAAY9C,EAAG4B,OAAOmB,mB,GAxDlC5E,IAAMtC,YCZxBwH,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.85c75244.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header () {\n  return (\n    <header style={headerStyle}>\n      <h1>Notes</h1>\n    </header>\n  );\n}\n\nconst headerStyle = {\n  background: '#333',\n  color: 'white',\n  textAlight: 'center',\n  padding: '10px',\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background     : '#ccc',\n      textAlign      : 'left',\n      padding        : '10px',\n      border         : '1px #c2c2c2 dotted',\n      color          : 'rgb(125,102,142)',\n      textDecoration : this.props.todo.completed ? 'line-through' : 'none'\n    };\n  };\n\n  render () {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input\n            type=\"checkbox\"\n            onChange={this.props.markComplete.bind(this, id)}\n          />{' '}\n          {title}\n          <button\n            style={btnStyle}\n            onClick={this.props.deleteTodo.bind(this, id)}\n          >\n            x\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo : PropTypes.object.isRequired\n};\n\nconst btnStyle = {\n  background   : '#ff0000',\n  borderRadius : '50%',\n  padding      : '5px 10px',\n  color        : '#fff',\n  float        : 'right',\n  cursor       : 'pointer'\n};\n\nexport default TodoItem;\n","import React, { Component } from 'react';\n\nexport default class AddTodo extends Component {\n  state = {\n    title : '',\n  };\n\n  onType = (e) => this.setState({ [e.target.name]: e.target.value });\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: '' });\n  };\n  render () {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\n        <input\n          type='text'\n          name='title'\n          style={{ flex: '10' }}\n          placeholder='Add Todo...'\n          value={this.state.title}\n          onChange={this.onType}\n        />\n        <input\n          type='submit'\n          value='Submit'\n          className='btn'\n          style={{ flex: '1', padding: '5px' }}\n        />\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { TodoItem } from './TodoItem';\nimport AddTodo from './AddTodo';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nclass TodoList extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      todos : [],\n    };\n    this.apiUrl = props.apiUrl;\n  }\n\n  componentDidMount () {\n    axios.get(this.apiUrl).then((res) => {\n      console.log(res.data);\n    });\n    this.getAllTodos();\n  }\n\n  render () {\n    return (\n      <div>\n        <AddTodo addTodo={this.addTodo} />\n        {this.state.todos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            markComplete={this.markComplete}\n            deleteTodo={this.deleteTodo}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  //* Gets all todos in db\n  getAllTodos = () => {\n    axios.get(this.apiUrl + 'todos').then((res) => {\n      this.setState({\n        todos : res.data,\n      });\n    });\n  };\n\n  //* Called when Todo Checkbox clicked\n  markComplete = (id) => {\n    axios.put(this.apiUrl + `todos/${id}`).then((res) => {\n      console.log('toggled data: ' + res.data);\n    });\n    this.setState({\n      todos : this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  //* Delete todo item\n  deleteTodo = (id) => {\n    axios.delete(this.apiUrl + `todos/${id}`).then((res) => {\n      console.log('deleted data: ' + res.data);\n    });\n    this.setState({\n      todos : [ ...this.state.todos.filter((todo) => todo.id !== id) ],\n    });\n  };\n\n  //* Add todo item\n  addTodo = (title) => {\n    let newTodo = {};\n    axios\n      .post(this.apiUrl + 'todos/', {\n        title    : title,\n        complete : false,\n      })\n      .then((res) => {\n        newTodo = res.data;\n        console.log(newTodo);\n\n        this.setState({ todos: [ ...this.state.todos, newTodo ] });\n      });\n  };\n}\n\nTodoList.propTypes = {\n  apiUrl : PropTypes.string.isRequired,\n};\n\nexport default TodoList;\n","// import * as uuid from 'uuid';\nimport { keyframes, Keyframes } from 'styled-components';\n\nclass TreeMenuApi {\n  scale: number;\n  units: string;\n  menu: Array<{ [key: string]: MenuNode }>;\n  constructor (props: MyProps) {\n    this.scale = props.scale;\n    this.units = props.units;\n    this.menu = props.menu;\n  }\n\n  //! --------------------------------------------------------------------------\n\n  handleSpawn = (currElem: Array<Layer>, depth: number, id: string): number => {\n    let node: InfoNodeChildren = currElem[depth][id] as InfoNodeChildren;\n    const from: number = node.spawnRange.from;\n    let to: number = node.spawnRange.to;\n    const children: Array<string> = (this.menu[depth][id] as MenuNodeChildren)\n      .children;\n    //* Handles root, or 360 spawn, prevents overlap\n    if (from + 2 === to) {\n      to = to - 2 / children.length;\n    }\n    const theta = (to - from) / (children.length - 1);\n\n    //* Deactivates everything else\n    currElem.splice(depth + 2);\n\n    //* Deactivates Siblings\n    node.parent = true;\n    currElem[depth] = { [id]: node };\n\n    //* Resets next layer\n    currElem[depth + 1] = currElem[depth + 1] ? currElem[depth + 1] : {};\n\n    //* Adds node's children to currElem, returns currElem\n    children.forEach((child: string, i: number) => {\n      if (!currElem[depth + 1][child] || currElem[depth + 1][child].hiding) {\n        //* Generates evenly distributed dirs for kids\n        const dir = from + i * theta;\n\n        //* Diff is distance moved\n        const diff = this.dirToDist(dir);\n        const menuInfo: MenuNode = this.menu[depth + 1][child];\n        const baseInfo = {\n          title: menuInfo.title,\n          background: menuInfo.background,\n          parent: false,\n          hiding: false,\n          willSpawn: true,\n          pos: { x: diff.x + node.pos.x, y: diff.y + node.pos.y },\n          animation: { keyframes: this.getKeyframes(dir), startPos: node.pos },\n        };\n\n        //* Populates new children based on type, inline typeguards\n        if ((menuInfo as MenuNodeChildren).children) {\n          currElem[depth + 1][child] = {\n            ...baseInfo,\n            spawnRange: this.getSpawnRange(dir),\n          };\n        } else if ((menuInfo as MenuNodeRoute).route) {\n          currElem[depth + 1][child] = {\n            ...baseInfo,\n            route: (menuInfo as MenuNodeRoute).route,\n          };\n        } else if ((menuInfo as MenuNodeLink).link) {\n          currElem[depth + 1][child] = {\n            ...baseInfo,\n            link: (menuInfo as MenuNodeLink).link,\n          };\n        }\n      }\n    });\n    return depth + 1;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  killKids = (currElem: Array<Layer>, depth: number, id: string): number => {\n    let node: InfoNodeChildren = currElem[depth][id] as InfoNodeChildren;\n\n    for (let i = depth + 1; i < currElem.length; i++) {\n      Object.entries(currElem[i]).forEach(([ id, child ]) => {\n        if (!child.hiding) {\n          child.hiding = true;\n          if (child.animation) {\n            child.animation.keyframes = this.getHidingKeyframes(\n              node.pos,\n              child.pos\n            );\n          }\n        } else if (child.animation) {\n          child.animation.keyframes = this.getHiddenKeyframes();\n        }\n      });\n    }\n    // currElem.splice(depth + 1);\n    return depth + 1;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  getKeyframes = (dir: number): Keyframes => {\n    const { x, y } = this.dirToDist(dir);\n    return keyframes`\n    0% {\n      transform: translate(0px, 0px);\n      visibility: hidden;\n      opacity: .25;\n    }\n    100% {\n      visibility: visible;\n      opacity: 1;\n      transform: translate(\n        ${x}${this.units},\n        ${y}${this.units});\n      }\n    }`;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  getHidingKeyframes = (from: Point, to: Point): Keyframes => {\n    return keyframes`\n    0% {\n      transform: translate(0px, 0px);\n      visibility: visible;\n      opacity: 1;\n    }\n    100% {\n      transform: translate(\n        ${from.x - to.x}${this.units},\n        ${from.y - to.y}${this.units});\n        visibility: hidden;\n        opacity: 0;\n      }\n    }`;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  getHiddenKeyframes = (): Keyframes => {\n    return keyframes`\n    0% {\n      visibility: hidden;\n    }\n    100% {\n      visibility: hidden;\n      }\n    }`;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  //* Returns dist translated\n  dirToDist = (dir: number): { x: number; y: number } => {\n    dir = Math.PI * dir;\n    return {\n      x: Math.trunc(Math.cos(dir) * this.scale),\n      y: Math.trunc(Math.sin(dir) * -this.scale),\n    };\n  };\n\n  //! --------------------------------------------------------------------------\n\n  getSpawnRange = (a: number) => {\n    // a *= 8;\n    // let i: number = Math.floor(((a < 1 ? a + 15 : a) - 1) / 2);\n    return {\n      from: 1.5 + a,\n      to: 2.5 + a,\n      // from: Math.floor(i / 2) * 0.5,\n      // to: Math.floor((i + 3) / 2) * 0.5,\n    };\n  };\n}\n\n//! ----------------------------------------------------------------------------------------------------------------------------------------------------\n//? ----------------------------------------------------------------------------------------------------------------------------------------------------\n//! ----------------------------------------------------------------------------------------------------------------------------------------------------\n//? ----------------------------------------------------------------------------------------------------------------------------------------------------\n\n//* Types and stuff\n\ninterface MyProps {\n  menu: Array<{ [key: string]: MenuNode }>;\n  scale: number;\n  units: string;\n}\nexport interface Point {\n  x: number;\n  y: number;\n}\nexport interface SpawnRange {\n  from: number;\n  to: number;\n}\nexport interface Layer {\n  [key: string]: InfoNode;\n}\n//? --------------------------------------------------------------------------\n\ninterface MenuNodeBasics {\n  title: string;\n  background?: string;\n}\ninterface MenuNodeChildren extends MenuNodeBasics {\n  children: Array<string>;\n  link?: never;\n  route?: never;\n}\ninterface MenuNodeLink extends MenuNodeBasics {\n  link: string;\n  spawnRange?: never;\n  route?: never;\n}\ninterface MenuNodeRoute extends MenuNodeBasics {\n  route: string;\n  spawnRange?: never;\n  link?: never;\n}\nexport type MenuNode = MenuNodeChildren | MenuNodeLink | MenuNodeRoute;\n\n//? --------------------------------------------------------------------------\n\ninterface InfoNodeBasics {\n  pos: Point;\n  title: string;\n  parent?: boolean;\n  background?: string;\n  willSpawn?: boolean;\n  hiding?: boolean;\n  animation?: {\n    startPos: Point;\n    keyframes: Keyframes;\n  };\n}\ninterface InfoNodeChildren extends InfoNodeBasics {\n  spawnRange: SpawnRange;\n  link?: never;\n  route?: never;\n}\ninterface InfoNodeLink extends InfoNodeBasics {\n  link: string;\n  spawnRange?: never;\n  route?: never;\n}\ninterface InfoNodeRoute extends InfoNodeBasics {\n  route: string;\n  spawnRange?: never;\n  link?: never;\n}\nexport type InfoNode = InfoNodeChildren | InfoNodeLink | InfoNodeRoute;\n\n//? --------------------------------------------------------------------------\n\n//! --------------------------------------------------------------------------\n\nexport default TreeMenuApi;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled, { css, FlattenSimpleInterpolation } from 'styled-components';\nimport TreeMenuApi, {\n  InfoNode,\n  Point,\n  SpawnRange,\n  MenuNode,\n  Layer,\n} from './TreeMenuApi';\nimport uuid from 'uuid';\n\nclass TreeMenu extends React.Component<MyProps, MyState> {\n  scale: number = 75;\n  units: string = 'px';\n  menuApi: TreeMenuApi;\n  animatedLayer = 1;\n\n  constructor (props: MyProps) {\n    super(props);\n\n    this.state = {\n      elements:\n        [\n          {\n            root:\n              {\n                pos: { x: 0, y: 0 },\n                title: props.menu[0].root.title,\n                willSpawn: true,\n                spawnRange: props.spawnRange,\n              },\n          },\n        ],\n    };\n    this.menuApi = new TreeMenuApi({\n      menu: props.menu,\n      scale: 75,\n      units: 'px',\n    });\n  }\n\n  //! --------------------------------------------------------------------------\n\n  render (): Array<JSX.Element> {\n    let jsxArr: Array<JSX.Element> = [];\n    for (let i = 0; i < this.state.elements.length; i++) {\n      Object.entries(this.state.elements[i]).forEach(([ id, node ]) => {\n        jsxArr.push(this.nodeToJSX(node, i, id));\n      });\n    }\n    this.animatedLayer++;\n    return jsxArr;\n  }\n\n  //! --------------------------------------------------------------------------\n\n  nodeToJSX = (node: InfoNode, depth: number, id: string): JSX.Element => {\n    let MenuButton = this.getDynamicStyle(node, depth);\n    // if (node.animation) {\n    //   this.state.elements[depth][id].animation = undefined;\n    // }\n    if (node.route) {\n      return (\n        <Link to={node.route} key={uuid.v4()}>\n          <MenuButton>{node.title}</MenuButton>\n        </Link>\n      );\n    } else if (node.spawnRange) {\n      return (\n        <MenuButton\n          key={uuid.v4()}\n          onClick={this.nodeClicked.bind(this, depth, id)}\n        >\n          {node.title}\n        </MenuButton>\n      );\n    } else if (node.link) {\n      return (\n        <MenuButton\n          key={uuid.v4()}\n          onClick={() => (window.location.href = node.link)}\n        >\n          {node.title}\n        </MenuButton>\n      );\n    }\n    return <MenuButton key={uuid.v4()}>{node.title}</MenuButton>;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  nodeClicked = (depth: number, id: string): void => {\n    this.setState((prevState: MyState) => {\n      if (prevState.elements[depth][id].willSpawn) {\n        prevState.elements[depth][id].willSpawn = false;\n        this.animatedLayer = this.menuApi.handleSpawn(\n          prevState.elements,\n          depth,\n          id\n        );\n      } else {\n        prevState.elements[depth][id].willSpawn = true;\n        this.animatedLayer = this.menuApi.killKids(\n          prevState.elements,\n          depth,\n          id\n        );\n      }\n      return prevState;\n    });\n  };\n\n  //! -------------------------------------------------------------------------\n\n  baseStyle = () => {\n    return styled.button`\n      font-size: 9pt;\n      font-weight: 600;\n      color: #ffffff;\n      text-shadow: 2px 2px #000000;\n\n      outline: none;\n      position: fixed;\n\n      width: ${this.scale}${this.units};\n      height: ${this.scale}${this.units};\n      margin-top: -${this.scale / 2}${this.units};\n      margin-left: -${this.scale / 2}${this.units};\n\n      background-size: contain;\n\n      border-radius: 50%;\n      &:hover {\n        border-color: #fdb241;\n        border-width: 2px;\n      }\n    `;\n  };\n\n  getDynamicStyle = (node: InfoNode, depth: number) => {\n    let posx = node.pos.x;\n    let posy = node.pos.y;\n    let extra: FlattenSimpleInterpolation = css``;\n    if (node.hiding && node.animation) {\n      extra = css`\n        animation: ${node.animation.keyframes} 350ms ease-in-out forwards;\n      `;\n    } else if (node.animation && this.animatedLayer === depth && !node.parent) {\n      posx = node.animation.startPos.x;\n      posy = node.animation.startPos.y;\n      extra = css`\n        animation: ${node.animation.keyframes} 350ms ease-in-out forwards;\n      `;\n    }\n    // background: ${node.background || '#404040'};\n    return styled(this.baseStyle())`\n    left: ${this.props.rootPos.x + posx}px;\n    top: ${this.props.rootPos.y + posy}px;\n    \n    background-image: linear-gradient(\n      rgba(0, 0, 0, 0.25),\n      rgba(0, 0, 0, 0.25)\n    ), url(/${node.background || 'icons/default.png'});\n    ${extra}\n    `;\n  };\n}\n//! --------------------------------------------------------------------------\n\n//* Types and stuff\n\n//* Each index in active array denotes a layer of the tree,\n//* Each layer (at depth i) is an object mapping ids to positions\ntype MyState = {\n  elements: Array<Layer>;\n};\ntype MyProps = {\n  rootPos: Point;\n  spawnRange: SpawnRange;\n  menu: Array<{ [key: string]: MenuNode }>;\n};\n\nexport default TreeMenu;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n// import { elastic as Sidebar } from 'react-burger-menu';\nimport Header from './components/todolist/Header';\nimport TodoList from './components/todolist/TodoList';\nimport LaunchMenu from './resources/launch-menu.json';\nimport TreeMenu from './components/tree_menu/TreeMenu';\n// import Panels from './components/panels/Panels';\n// import MyAlert from './components/test/MyAlert';\nimport './App.css';\n\ntype MyState = {\n  windowSize: { x: number; y: number };\n};\ntype MyProps = {};\n\nclass App extends React.Component<MyProps, MyState> {\n  apiUrl: String;\n\n  constructor (props: MyProps) {\n    super(props);\n    if (process.env.NODE_ENV === 'development') {\n      this.apiUrl = 'http://127.0.0.1:54321/api/';\n    } else {\n      this.apiUrl = 'https://abarbieux.com/api/';\n    }\n    this.state = {\n      windowSize: { x: window.innerWidth / 2, y: window.innerHeight / 2 },\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n  render () {\n    return (\n      <div className='Tiled-back'>\n        {/* <MyAlert /> */}\n        <div>\n          <main>\n            <Router>\n              <Switch>\n                <Route path='/notes/'>\n                  <Header />\n                  <TodoList apiUrl={this.apiUrl} />\n                  {/* <div>Note Page</div> */}\n                </Route>\n                <Route path='/'>\n                  <TreeMenu\n                    rootPos={{\n                      x: this.state.windowSize.x / 2,\n                      y: this.state.windowSize.y / 2,\n                    }}\n                    spawnRange={{ from: 0.5, to: 2.5 }}\n                    menu={LaunchMenu}\n                  />\n                </Route>\n              </Switch>\n            </Router>\n          </main>\n        </div>\n      </div>\n    );\n  }\n  componentDidMount () {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions () {\n    this.setState({\n      windowSize: { x: window.innerWidth, y: window.innerHeight },\n    });\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}