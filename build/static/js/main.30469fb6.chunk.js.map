{"version":3,"sources":["components/todolist/style/Header.tsx","components/tree_menu/TreeMenu.tsx","components/todolist/TodoItem.js","components/todolist/AddTodo.js","components/todolist/TodoList.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["headerStyle","background","color","textAlight","padding","Header","style","TreeMenu","props","layerToBtns","layer","depth","jsxArr","Object","entries","id","node","push","key","uuid","className","onClick","nodeClicked","bind","menu","title","menuNode","state","active","children","setState","prevState","splice","addChildren","link","followLink","route","followRoute","to","spawnRange","from","forEach","child","i","dir","length","diff","addAnimation","pos","x","y","getSpawnRange","animationName","Math","ceil","left","top","dist","styleSheet","document","styleSheets","PI","keyframes","trunc","cos","sin","insertRule","cssRules","a","floor","console","log","root","rootPos","renderedItems","this","React","TodoItem","getStyle","textAlign","border","textDecoration","todo","completed","type","onChange","markComplete","btnStyle","deleteTodo","Component","borderRadius","float","cursor","AddTodo","onType","e","target","name","value","onSubmit","preventDefault","addTodo","display","flex","placeholder","TodoList","getAllTodos","axios","get","apiUrl","then","res","todos","data","put","map","delete","filter","newTodo","post","complete","App","middle","window","innerWidth","innerHeight","updateWindowDimensions","LaunchMenu","addEventListener","removeEventListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.30469fb6.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header () {\n  return (\n    <header style={headerStyle}>\n      <h1>Todo List</h1>\n    </header>\n  );\n}\n\nconst headerStyle = {\n  background: '#333',\n  color: 'white',\n  textAlight: 'center',\n  padding: '10px',\n};\nexport default Header;\n","import * as React from 'react';\nimport * as uuid from 'uuid';\nimport './MenuNode.css';\n\nclass TreeMenu extends React.Component<MyProps, MyState> {\n  constructor (props: MyProps) {\n    super(props);\n\n    this.state = {\n      active:\n        [\n          {\n            root:\n              {\n                pos: this.props.rootPos,\n                spawnRange: this.props.spawnRange,\n                style:\n                  { left: this.props.rootPos.x, top: this.props.rootPos.y },\n              },\n          },\n        ],\n    };\n  }\n\n  //! --------------------------------------------------------------------------\n\n  render () {\n    let renderedItems: Array<JSX.Element> = [];\n    for (let i = 0; i < this.state.active.length; i++) {\n      renderedItems = [\n        ...renderedItems,\n        ...this.layerToBtns(this.state.active[i], i),\n      ];\n    }\n    return renderedItems;\n  }\n\n  //! --------------------------------------------------------------------------\n\n  layerToBtns = (layer: Layer, depth: number): Array<JSX.Element> => {\n    const jsxArr: Array<JSX.Element> = [];\n    for (let [ id, node ] of Object.entries(layer)) {\n      jsxArr.push(\n        <button\n          key={uuid.v4()}\n          className='Menu-btn'\n          style={node.style}\n          onClick={this.nodeClicked.bind(this, depth, id)}\n        >\n          {/* {this.state.active[depth][id].spawnRange.from}\n          {' to '}\n          {this.state.active[depth][id].spawnRange.to} */}\n          {this.props.menu[depth][id].title}\n        </button>\n      );\n    }\n    return jsxArr;\n  };\n\n  //! --------------------------------------------------------------------------\n\n  nodeClicked = (depth: number, id: string) => {\n    //* Queries provided menu json\n    let menuNode: MenuNode = this.props.menu[depth][id];\n    let node: ActiveNode = this.state.active[depth][id];\n\n    if (menuNode.children) {\n      this.setState((prevState) => {\n        //* Deactivates everything else\n        prevState.active.splice(depth);\n\n        //* Deactivated Siblings\n        prevState.active[depth] = { [id]: node };\n\n        return prevState;\n      });\n      this.addChildren(menuNode.children, node, depth);\n    } else if (menuNode.link) {\n      this.followLink(menuNode.link);\n    } else if (menuNode.route) {\n      this.followRoute(menuNode.route);\n    } else {\n      //! Throw error\n    }\n  };\n\n  //! --------------------------------------------------------------------------\n\n  addChildren = (children: Array<string>, node: ActiveNode, depth: number) => {\n    let to: number = node.spawnRange.to;\n    let from: number = node.spawnRange.from;\n\n    this.setState((prevState) => {\n      //* Resets layer just in case\n      prevState.active[depth + 1] = {};\n\n      //* Adds node's children to active array\n      children.forEach((child, i) => {\n        //* Generates evenly distributed dirs for kids\n        const dir =\n          from + i / children.length * ((to < from ? to + 2 : to) - from);\n\n        //* Diff is distance moved\n        const diff = this.addAnimation(dir, 100);\n\n        //* Initing each child in next later\n        prevState.active[depth + 1][child] = {\n          pos: { x: node.pos.x + diff.x, y: node.pos.y + diff.y },\n          spawnRange: this.getSpawnRange(dir),\n          style:\n            {\n              animationName: `animation${Math.ceil(dir * 10)}`,\n              left: node.pos.x,\n              top: node.pos.y,\n            },\n        };\n      });\n      return prevState;\n    });\n  };\n\n  //! --------------------------------------------------------------------------\n\n  //* Returns dist translated\n  addAnimation = (dir: number, dist: number): { x: number; y: number } => {\n    let styleSheet = document.styleSheets[0] as CSSStyleSheet;\n    let animationName: string = `animation${Math.ceil(dir * 10)}`;\n    dir = Math.PI * dir;\n    let keyframes = `@keyframes ${animationName} {\n        0% {\n          transform: translate(0px, 0px);\n        }\n        100% {\n          transform: translate(\n            ${Math.trunc(Math.cos(dir) * dist)}px,\n            ${Math.trunc(Math.sin(dir) * -dist)}px);\n          }\n        }`;\n\n    styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n    return {\n      x: Math.trunc(Math.cos(dir) * dist),\n      y: Math.trunc(Math.sin(dir) * -dist),\n    };\n  };\n\n  //! --------------------------------------------------------------------------\n\n  getSpawnRange = (a: number) => {\n    a *= 8;\n    let i: number = Math.floor(((a < 1 ? a + 15 : a) - 1) / 2);\n    return {\n      from: (Math.floor(i / 2) * 0.5) % 2,\n      to: (Math.floor((i + 3) / 2) * 0.5) % 2,\n    };\n  };\n\n  //! --------------------------------------------------------------------------\n\n  followLink = (link: string) => {\n    console.log('Following link: %s', link);\n  };\n\n  //! --------------------------------------------------------------------------\n\n  followRoute = (route: string) => {\n    console.log('Following route: %s', route);\n  };\n}\n\n//! --------------------------------------------------------------------------\n\n//* Each index in active array denotes a layer of the tree,\n//* Each layer (at depth i) is an object mapping ids to positions\ntype MyState = { active: Array<Layer> };\ntype MyProps = {\n  rootPos: Point;\n  spawnRange: Range;\n  menu: Array<{ [key: string]: MenuNode }>;\n};\n\n//! Type stuff\n\ntype MenuNode = {\n  title: string;\n  children?: Array<string>;\n  link?: string;\n  route?: string;\n};\n\ntype Point = { x: number; y: number };\ntype Range = { from: number; to: number };\n\ntype ActiveNode = {\n  pos: Point;\n  spawnRange: Range;\n  style: object;\n};\n\ntype Layer = {\n  [key: string]: ActiveNode;\n};\n\nexport default TreeMenu;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background     : '#ccc',\n      textAlign      : 'left',\n      padding        : '10px',\n      border         : '1px #c2c2c2 dotted',\n      color          : 'rgb(125,102,142)',\n      textDecoration : this.props.todo.completed ? 'line-through' : 'none'\n    };\n  };\n\n  render () {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input\n            type=\"checkbox\"\n            onChange={this.props.markComplete.bind(this, id)}\n          />{' '}\n          {title}\n          <button\n            style={btnStyle}\n            onClick={this.props.deleteTodo.bind(this, id)}\n          >\n            x\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo : PropTypes.object.isRequired\n};\n\nconst btnStyle = {\n  background   : '#ff0000',\n  borderRadius : '50%',\n  padding      : '5px 10px',\n  color        : '#fff',\n  float        : 'right',\n  cursor       : 'pointer'\n};\n\nexport default TodoItem;\n","import React, { Component } from 'react';\n\nexport default class AddTodo extends Component {\n  state = {\n    title : ''\n  };\n\n  onType = (e) => this.setState({ [e.target.name]: e.target.value });\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: '' });\n  };\n  render () {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          style={{ flex: '10' }}\n          placeholder=\"Add Todo...\"\n          value={this.state.title}\n          onChange={this.onType}\n        />\n        <input\n          type=\"submit\"\n          value=\"Submit\"\n          className=\"btn\"\n          style={{ flex: '1', padding: '5px' }}\n        />\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { TodoItem } from './TodoItem';\nimport AddTodo from './AddTodo';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nclass TodoList extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      todos : [],\n    };\n    this.apiUrl = props.apiUrl;\n  }\n\n  componentDidMount () {\n    axios.get(this.apiUrl).then((res) => {\n      console.log(res.data);\n    });\n    this.getAllTodos();\n  }\n\n  render () {\n    return (\n      <div>\n        <AddTodo addTodo={this.addTodo} />\n        {this.state.todos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            markComplete={this.markComplete}\n            deleteTodo={this.deleteTodo}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  //* Gets all todos in db\n  getAllTodos = () => {\n    axios.get(this.apiUrl + 'todos').then((res) => {\n      this.setState({\n        todos : res.data,\n      });\n    });\n  };\n\n  //* Called when Todo Checkbox clicked\n  markComplete = (id) => {\n    axios.put(this.apiUrl + `todos/${id}`).then((res) => {\n      console.log('toggled data: ' + res.data);\n    });\n    this.setState({\n      todos : this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  //* Delete todo item\n  deleteTodo = (id) => {\n    axios.delete(this.apiUrl + `todos/${id}`).then((res) => {\n      console.log('deleted data: ' + res.data);\n    });\n    this.setState({\n      todos : [ ...this.state.todos.filter((todo) => todo.id !== id) ],\n    });\n  };\n\n  //* Add todo item\n  addTodo = (title) => {\n    let newTodo = {};\n    axios\n      .post(this.apiUrl + 'todos/', {\n        title    : title,\n        complete : false,\n      })\n      .then((res) => {\n        newTodo = res.data;\n        console.log(newTodo);\n\n        this.setState({ todos: [ ...this.state.todos, newTodo ] });\n      });\n  };\n}\n\nTodoList.propTypes = {\n  apiUrl : PropTypes.string.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport LaunchMenu from './launch-menu.json';\nimport Header from './components/todolist/style/Header';\nimport TreeMenu from './components/tree_menu/TreeMenu';\nimport TodoList from './components/todolist/TodoList';\n\nimport './App.css';\ntype MyState = { middle: { x: number; y: number } };\ntype MyProps = {};\ntype MenuNode = {\n  title: string;\n  children?: Array<string>;\n  link?: string;\n  route?: string;\n};\nclass App extends React.Component<MyProps, MyState> {\n  apiUrl: String;\n\n  constructor (props: MyProps) {\n    super(props);\n    if (process.env.NODE_ENV === 'development') {\n      this.apiUrl = 'http://127.0.0.1:54321/api/';\n    } else {\n      this.apiUrl = 'https://abarbieux.com/api/';\n    }\n    this.state = {\n      middle: { x: window.innerWidth / 2, y: window.innerHeight / 2 },\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  render () {\n    return (\n      <div className='Tiled-back'>\n        <div className='container'>\n          <Header />\n\n          <TodoList apiUrl={this.apiUrl} />\n\n          <div className='Menu-container'>\n            <TreeMenu\n              rootPos={this.state.middle}\n              spawnRange={{ from: 0, to: 2 }}\n              menu={LaunchMenu}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  componentDidMount () {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions () {\n    this.setState({ middle: { x: window.innerWidth, y: window.innerHeight } });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}