{"version":3,"sources":["components/todolist/style/Header.js","../../Menu.tsx","App.js","index.js"],"names":["headerStyle","background","color","textAlight","padding","Header","style","App","props","apiUrl","state","middle","x","window","innerWidth","y","innerHeight","updateWindowDimensions","bind","console","log","this","className","rootPos","spawnRange","from","to","menu","LaunchMenu","addEventListener","removeEventListener","setState","midde","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.350613d3.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header () {\n\treturn (\n\t\t<header style={headerStyle}>\n\t\t\t<h1>Todo List</h1>\n\t\t</header>\n\t);\n}\n\nconst headerStyle = {\n\tbackground : '#333',\n\tcolor      : 'white',\n\ttextAlight : 'center',\n\tpadding    : '10px'\n};\nexport default Header;\n","import * as React from 'react';\nimport * as uuid from 'uuid';\nimport './MenuNode.css';\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        //! --------------------------------------------------------------------------\n        this.layerToBtns = (layer, depth) => {\n            const jsxArr = [];\n            for (let [id, node] of Object.entries(layer)) {\n                jsxArr.push(<button key={uuid.v4()} className='Menu-btn' style={node.style} onClick={this.nodeClicked.bind(this, depth, id)}>\n          \n          {this.props.menu[depth][id].title}\n        </button>);\n            }\n            return jsxArr;\n        };\n        //! --------------------------------------------------------------------------\n        this.nodeClicked = (depth, id) => {\n            //* Queries provided menu json\n            let menuNode = this.props.menu[depth][id];\n            let node = this.state.active[depth][id];\n            if (menuNode.children) {\n                this.setState((prevState) => {\n                    //* Deactivates everything else\n                    prevState.active.splice(depth);\n                    //* Deactivated Siblings\n                    prevState.active[depth] = { [id]: node };\n                    return prevState;\n                });\n                this.addChildren(menuNode.children, node, depth);\n            }\n            else if (menuNode.link) {\n                this.followLink(menuNode.link);\n            }\n            else if (menuNode.route) {\n                this.followRoute(menuNode.route);\n            }\n            else {\n                //! Throw error\n            }\n        };\n        //! --------------------------------------------------------------------------\n        this.addChildren = (children, node, depth) => {\n            let to = node.spawnRange.to;\n            let from = node.spawnRange.from;\n            this.setState((prevState) => {\n                //* Resets layer just in case\n                prevState.active[depth + 1] = {};\n                //* Adds node's children to active array\n                children.forEach((child, i) => {\n                    //* Generates evenly distributed dirs for kids\n                    const dir = from + i / children.length * ((to < from ? to + 2 : to) - from);\n                    //* Diff is distance moved\n                    const diff = this.addAnimation(dir, 100);\n                    //* Initing each child in next later\n                    prevState.active[depth + 1][child] = {\n                        pos: { x: node.pos.x + diff.x, y: node.pos.y + diff.y },\n                        spawnRange: this.getSpawnRange(dir),\n                        style: {\n                            animationName: `animation${Math.ceil(dir * 10)}`,\n                            left: node.pos.x,\n                            top: node.pos.y,\n                        },\n                    };\n                });\n                return prevState;\n            });\n        };\n        //! --------------------------------------------------------------------------\n        //* Returns dist translated\n        this.addAnimation = (dir, dist) => {\n            let styleSheet = document.styleSheets[0];\n            let animationName = `animation${Math.ceil(dir * 10)}`;\n            dir = Math.PI * dir;\n            let keyframes = `@keyframes ${animationName} {\n        0% {\n          transform: translate(0px, 0px);\n        }\n        100% {\n          transform: translate(\n            ${Math.trunc(Math.cos(dir) * dist)}px,\n            ${Math.trunc(Math.sin(dir) * -dist)}px);\n          }\n        }`;\n            styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n            return {\n                x: Math.trunc(Math.cos(dir) * dist),\n                y: Math.trunc(Math.sin(dir) * -dist),\n            };\n        };\n        //! --------------------------------------------------------------------------\n        this.getSpawnRange = (a) => {\n            a *= 8;\n            let i = Math.floor(((a < 1 ? a + 15 : a) - 1) / 2);\n            return {\n                from: (Math.floor(i / 2) * 0.5) % 2,\n                to: (Math.floor((i + 3) / 2) * 0.5) % 2,\n            };\n        };\n        //! --------------------------------------------------------------------------\n        this.followLink = (link) => {\n            console.log('Following link: %s', link);\n        };\n        //! --------------------------------------------------------------------------\n        this.followRoute = (route) => {\n            console.log('Following route: %s', route);\n        };\n        this.state = {\n            active: [\n                {\n                    root: {\n                        pos: this.props.rootPos,\n                        spawnRange: this.props.spawnRange,\n                        style: { left: this.props.rootPos.x, top: this.props.rootPos.y },\n                    },\n                },\n            ],\n        };\n    }\n    //! --------------------------------------------------------------------------\n    render() {\n        let renderedItems = [];\n        for (let i = 0; i < this.state.active.length; i++) {\n            renderedItems = [\n                ...renderedItems,\n                ...this.layerToBtns(this.state.active[i], i),\n            ];\n        }\n        return renderedItems;\n    }\n}\n//# sourceMappingURL=Menu.jsx.map","import React from 'react';\nimport Header from './components/todolist/style/Header';\nimport LaunchMenu from './launch-menu';\nimport * as TreeMenu from './components/tree_menu/js/Menu';\n// import useWindowDimensions from './components/WindowSize';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n    if (process.env.NODE_ENV === 'development') {\n      this.apiUrl = 'http://127.0.0.1:54321/api/';\n    } else {\n      this.apiUrl = 'https://abarbieux.com/api/';\n    }\n    this.state = {\n      middle : { x: window.innerWidth / 2, y: window.innerHeight / 2 },\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  //* Where the Magic Happens\n  render () {\n    console.log(this.state);\n    return (\n      <div className='Tiled-back'>\n        <div className='container'>\n          <Header />\n\n          {/* <TodoList apiUrl={this.apiUrl} /> */}\n\n          <div className='Menu-container'>\n            <TreeMenu\n              rootPos={this.state.middle}\n              spawnRange={{ from: 0, to: 2 }}\n              menu={LaunchMenu}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount () {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions () {\n    this.setState({ midde: { x: window.innerWidth, y: window.innerHeight } });\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}